import numpy as np
import pandas as pd

df = pd.read_csv('Social_Network_Ads.csv')
df

X = df.iloc[:,0:2]
X

y = df.iloc[:,-1]
y

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2, random_state = 20)

X_train

y_train

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()

model = lr.fit(X_train,y_train)

y_pred = model.predict(X_test)

y_test

y_pred

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test,y_pred)
accuracy

from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test,y_pred)
mse

from sklearn.metrics import precision_score
precision = precision_score(y_test,y_pred)
precision

from sklearn.metrics import recall_score
recall = recall_score(y_test,y_pred)
recall

#to improve accuracy if low
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()

X_train = sc.fit_transform(X_train)
X_test = sc.fit_transform(X_test)

X_test

model = lr.fit(X_train,y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test,y_pred)
mse

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test,y_pred)
accuracy

from sklearn.metrics import precision_score
precision = precision_score(y_test,y_pred)
precision

from sklearn.metrics import recall_score
recall = recall_score(y_test,y_pred)
recall

#create confusion matrix

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)

cm

import seaborn as sns
sns.heatmap(cm,annot=True)



